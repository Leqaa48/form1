{"version":3,"sources":["component/post.jsx","context/postContext.jsx","component/nav.jsx","context/addPostsContext.jsx","component/selectData.jsx","component/selectTag.jsx","functional/reducer.jsx","functional/store.jsx","component/addPost.jsx","functional/actios.jsx","component/viewPosts.jsx","App.js","serviceWorker.js","index.js"],"names":["Post","props","className","src","alt","name","PostContext","createContext","PostProvider","Props","useState","id","label","value","item","setItem","Provider","children","Nav","to","AddPostContext","AddPostsProvider","type","imgSrc","Posts","addPosts","colourOptions","color","isFixed","isDisabled","dot","alignItems","display","backgroundColor","borderRadius","content","marginRight","height","width","colourStyles","control","styles","option","data","isFocused","isSelected","chroma","alpha","css","contrast","cursor","input","placeholder","singleValue","defaultValue","options","reducer","state","action","payload","filter","post","store","createStore","AddPost","useContext","posts","setName","setType","setImgSrc","length","setId","show","setShow","Button","variant","onClick","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","Body","onSubmit","e","preventDefault","dispatch","postAdded","console","log","getState","prevPosts","onChange","ClassName","class","rows","ViewPosts","map","pathname","key","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89dd4da1.chunk.js","sourcesContent":["import React, { Component, useContext } from 'react';\r\nimport \"../App.css\";\r\nfunction Post(props) {\r\n\r\n    return (\r\n        <div className=\"mainPostDiv\">\r\n            <div className=\"picFrame\">\r\n                <img className=\"roundPic\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQtqnddUplMi0tp7fQ6qlhNeGj16gDT5Hthug&usqp=CAU\" alt={props.name} />\r\n            </div>\r\n            <div className=\"header-desc\">\r\n                <h2 className=\"postHeader\">{props.name}</h2>\r\n                <p className=\"description alert-dark ml-2\">\r\n                    vehicle used for transportation. Most definitions of cars say that they run primarily on roads, seat one\r\n           <i> More....</i>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React, { useState, createContext } from 'react';\r\nimport Post from '../component/post';\r\n\r\n\r\nexport const PostContext = createContext();\r\n\r\nexport const PostProvider = (Props) => {\r\n\r\n    const [item, setItem] = useState([\r\n        {\r\n            id: 1, label: \"Car\", value: \"img-9.jpg\"\r\n        }, {\r\n\r\n            id: 2, label: \"Flower\", value: \"img-1.jpg\"\r\n        },\r\n        {\r\n\r\n            id: 3, label: \"Sea\", value: \"img-5.jpg\"\r\n        }\r\n\r\n\r\n\r\n\r\n    ]);\r\n    \r\n   \r\n\r\n    return (<PostContext.Provider value={[item, setItem]} >{Props.children}</PostContext.Provider>);\r\n}\r\n\r\n\r\n","import React, {useContext } from 'react';\r\nimport {PostContext} from '../context/postContext';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n\r\n    const navStyle = {\r\n        color: 'white'\r\n    };\r\n    return (\r\n        <nav>\r\n            <h2>Nav</h2>\r\n            <ul className=\"nav-links\">\r\n                <Link to=\"/AddPost\">\r\n                    <li>Add Post</li>\r\n                </Link>\r\n                <Link to=\"/ViewPosts\">\r\n                    <li>View Posts</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const AddPostContext = createContext();\r\n\r\nexport const AddPostsProvider = (props) => {\r\n    const [Posts, addPosts] = useState([\r\n        { id: 0, name: 'car', type: 'car', imgSrc: 'img-9.jpg' },\r\n    ]\r\n    );\r\n    return (\r\n        <AddPostContext.Provider value={[Posts, addPosts]}>\r\n            {props.children}\r\n        </AddPostContext.Provider>\r\n    );\r\n};","export const colourOptions = [\r\n    { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\r\n    { value: 'blue', label: 'Blue', color: '#0052CC', isDisabled: true },\r\n    { value: 'purple', label: 'Purple', color: '#5243AA' },\r\n    { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\r\n    { value: 'orange', label: 'Orange', color: '#FF8B00' },\r\n    { value: 'yellow', label: 'Yellow', color: '#FFC400' },\r\n    { value: 'green', label: 'Green', color: '#36B37E' },\r\n    { value: 'forest', label: 'Forest', color: '#00875A' },\r\n    { value: 'slate', label: 'Slate', color: '#253858' },\r\n    { value: 'silver', label: 'Silver', color: '#666666' },\r\n  ];\r\n  \r\n  export const flavourOptions = [\r\n    { value: 'vanilla', label: 'Vanilla', rating: 'safe' },\r\n    { value: 'chocolate', label: 'Chocolate', rating: 'good' },\r\n    { value: 'strawberry', label: 'Strawberry', rating: 'wild' },\r\n    { value: 'salted-caramel', label: 'Salted Caramel', rating: 'crazy' },\r\n  ];\r\n  \r\n  export const stateOptions = [\r\n    { value: 'AL', label: 'Alabama' },\r\n    { value: 'AK', label: 'Alaska' },\r\n    { value: 'AS', label: 'American Samoa' },\r\n    { value: 'AZ', label: 'Arizona' },\r\n    { value: 'AR', label: 'Arkansas' },\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'CO', label: 'Colorado' },\r\n    { value: 'CT', label: 'Connecticut' },\r\n    { value: 'DE', label: 'Delaware' },\r\n    { value: 'DC', label: 'District Of Columbia' },\r\n    { value: 'FM', label: 'Federated States Of Micronesia' },\r\n    { value: 'FL', label: 'Florida' },\r\n    { value: 'GA', label: 'Georgia' },\r\n    { value: 'GU', label: 'Guam' },\r\n    { value: 'HI', label: 'Hawaii' },\r\n    { value: 'ID', label: 'Idaho' },\r\n    { value: 'IL', label: 'Illinois' },\r\n    { value: 'IN', label: 'Indiana' },\r\n    { value: 'IA', label: 'Iowa' },\r\n    { value: 'KS', label: 'Kansas' },\r\n    { value: 'KY', label: 'Kentucky' },\r\n    { value: 'LA', label: 'Louisiana' },\r\n    { value: 'ME', label: 'Maine' },\r\n    { value: 'MH', label: 'Marshall Islands' },\r\n    { value: 'MD', label: 'Maryland' },\r\n    { value: 'MA', label: 'Massachusetts' },\r\n    { value: 'MI', label: 'Michigan' },\r\n    { value: 'MN', label: 'Minnesota' },\r\n    { value: 'MS', label: 'Mississippi' },\r\n    { value: 'MO', label: 'Missouri' },\r\n    { value: 'MT', label: 'Montana' },\r\n    { value: 'NE', label: 'Nebraska' },\r\n    { value: 'NV', label: 'Nevada' },\r\n    { value: 'NH', label: 'New Hampshire' },\r\n    { value: 'NJ', label: 'New Jersey' },\r\n    { value: 'NM', label: 'New Mexico' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'NC', label: 'North Carolina' },\r\n    { value: 'ND', label: 'North Dakota' },\r\n    { value: 'MP', label: 'Northern Mariana Islands' },\r\n    { value: 'OH', label: 'Ohio' },\r\n    { value: 'OK', label: 'Oklahoma' },\r\n    { value: 'OR', label: 'Oregon' },\r\n    { value: 'PW', label: 'Palau' },\r\n    { value: 'PA', label: 'Pennsylvania' },\r\n    { value: 'PR', label: 'Puerto Rico' },\r\n    { value: 'RI', label: 'Rhode Island' },\r\n    { value: 'SC', label: 'South Carolina' },\r\n    { value: 'SD', label: 'South Dakota' },\r\n    { value: 'TN', label: 'Tennessee' },\r\n    { value: 'TX', label: 'Texas' },\r\n    { value: 'UT', label: 'Utah' },\r\n    { value: 'VT', label: 'Vermont' },\r\n    { value: 'VI', label: 'Virgin Islands' },\r\n    { value: 'VA', label: 'Virginia' },\r\n    { value: 'WA', label: 'Washington' },\r\n    { value: 'WV', label: 'West Virginia' },\r\n    { value: 'WI', label: 'Wisconsin' },\r\n    { value: 'WY', label: 'Wyoming' },\r\n  ];\r\n  \r\n  export const optionLength = [\r\n    { value: 1, label: 'general' },\r\n    {\r\n      value: 2,\r\n      label:\r\n        'Evil is the moment when I lack the strength to be true to the Good that compels me.',\r\n    },\r\n    {\r\n      value: 3,\r\n      label:\r\n        \"It is now an easy matter to spell out the ethic of a truth: 'Do all that you can to persevere in that which exceeds your perseverance. Persevere in the interruption. Seize in your being that which has seized and broken you.\",\r\n    },\r\n  ];\r\n  \r\n  export const dogOptions = [\r\n    { id: 1, label: 'Chihuahua' },\r\n    { id: 2, label: 'Bulldog' },\r\n    { id: 3, label: 'Dachshund' },\r\n    { id: 4, label: 'Akita' },\r\n  ];\r\n  \r\n  // let bigOptions = [];\r\n  // for (let i = 0; i < 10000; i++) {\r\n  // \tbigOptions = bigOptions.concat(colourOptions);\r\n  // }\r\n  \r\n  export const groupedOptions = [\r\n    {\r\n      label: 'Colours',\r\n      options: colourOptions,\r\n    },\r\n    {\r\n      label: 'Flavours',\r\n      options: flavourOptions,\r\n    },\r\n  ];\r\n  ","import React from 'react';\r\nimport chroma from 'chroma-js';\r\n\r\nimport { colourOptions } from './selectData';\r\nimport Select from 'react-select';\r\n\r\nconst dot = (color = '#ccc') => ({\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n\r\n  ':before': {\r\n    backgroundColor: color,\r\n    borderRadius: 10,\r\n    content: '\" \"',\r\n    display: 'block',\r\n    marginRight: 8,\r\n    height: 10,\r\n    width: 10,\r\n  },\r\n});\r\n\r\nconst colourStyles = {\r\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    const color = chroma(data.color);\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? data.color\r\n        : isFocused\r\n        ? color.alpha(0.1).css()\r\n        : null,\r\n      color: isDisabled\r\n        ? '#ccc'\r\n        : isSelected\r\n        ? chroma.contrast(color, 'white') > 2\r\n          ? 'white'\r\n          : 'black'\r\n        : data.color,\r\n      cursor: isDisabled ? 'not-allowed' : 'default',\r\n\r\n      ':active': {\r\n        ...styles[':active'],\r\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n      },\r\n    };\r\n  },\r\n  input: styles => ({ ...styles, ...dot() }),\r\n  placeholder: styles => ({ ...styles, ...dot() }),\r\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\n\r\nexport default () => (\r\n  <Select\r\n    defaultValue={colourOptions[2]}\r\n    label=\"Single select\"\r\n    options={colourOptions}\r\n    styles={colourStyles}\r\n  />\r\n);\r\n","function reducer (state = [] , action)  {\r\n    switch(action.type){\r\n        case \"POST_ADDED\":\r\n            return [\r\n                ...state,\r\n                {\r\n                    id : action.payload.id,\r\n                    name :action.payload.name,\r\n                    type : action.payload.type,\r\n                    imgSrc :action.payload.imgSrc,\r\n                }\r\n            ];\r\n            case \"POS_REMOVED\" :\r\n                return[\r\n                    state.filter(post => post.id !== action.payload.id)\r\n                ];\r\n                default : return state;\r\n    }\r\n}\r\n \r\nexport default reducer;","import { createStore, creatReducer } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React, { Component, useState, useContext } from 'react';\r\nimport { PostContext } from '../context/postContext';\r\nimport '../App.css';\r\nimport './addPost.css';\r\nimport { AddPostContext } from '../context/addPostsContext';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Select from 'react-select'\r\nimport MyComponent from './selectTag';\r\nimport store from '../functional/store';\r\nimport { postAdded } from '../functional/actios';\r\n\r\nfunction AddPost() {\r\n\r\n    const [posts, addPosts] = useContext(AddPostContext);\r\n    const [item, setItem] = useContext(PostContext);\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [imgSrc, setImgSrc] = useState('');\r\n    const [id, setId] = useState(posts.length);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const updateName = (e) => {\r\n        setName(e.value);\r\n    };\r\n    const updateType = (e) => {\r\n        setType(e.value);\r\n    };\r\n    const updateImgSrc = (e) => {\r\n        console.log(e);\r\n        setImgSrc(e.value);\r\n    };\r\n\r\n    const AddPosts = (e) => {\r\n        e.preventDefault();\r\n        setId(posts.length + 1);\r\n        store.dispatch(postAdded( id, name, type,  imgSrc));\r\n        console.log(store.getState()) ;\r\n        addPosts(prevPosts => [...prevPosts, { id: id, name: name, type: type, imgSrc: imgSrc }]);\r\n\r\n    };\r\n    return (\r\n\r\n        <div>\r\n            <Button variant=\"primary\" onClick={() => setShow(true)}>\r\n                Add Post\r\n        </Button>\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        Add Post\r\n            </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h1>Add Post Page </h1>\r\n                    <div className=\"tableDiv\">\r\n\r\n                        <form onSubmit={AddPosts}>\r\n\r\n                            <label>name</label>\r\n                            <input className=\"form-control  formInput\" id=\"exampleFormControlInput1\" type=\"textbox\" value={name} onChange={updateName} />\r\n\r\n                            <div className=\"select-items\">\r\n                                <div ClassName=\"Row\">\r\n                                    <div>\r\n                                        <label> Categoryes </label>\r\n                                        <Select className=\"l\" value={type} onChange={updateType} \r\n                                        options={[{\r\n                                            id: 1, label: \"سيارات - مركبات\", value: \"Cars and Vehicles\"\r\n                                        },\r\n                                        {\r\n                                            id: 2, label: \"Mobiles and Tablets\", value: \"Mobiles and Tablets\"\r\n                                        },\r\n                                        {\r\n                                            id: 3, label: \"Video games and accessories\", value: \"Video games and accessories\"\r\n                                        },\r\n                                        {\r\n                                            id: 4, label: \"Electronics - devices\", value: \"Electronics - devices\"\r\n                                        }\r\n                                        ]} \r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label> product</label>\r\n                                        <Select className=\"selectSize\"  options={item.label} />\r\n                                    </div>\r\n                                </div>\r\n                                <div ClassName=\"Row\">\r\n                                    <div>\r\n                                        <label>Image</label>\r\n                                        <Select className=\"selectSize\" value={imgSrc} onChange={updateImgSrc} options={item} />\r\n                                    </div>\r\n\r\n                                    <div className=\"selectSize\" >\r\n                                        <label>Color</label>\r\n                                        <MyComponent />\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Price</label>\r\n\r\n                                    <input className=\"selectSize  form-control\" type=\"textbox\"  />\r\n                                </div>\r\n                            </div> {/*the end of input  */}\r\n                            <h5> <label>Desc</label></h5>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n\r\n                            <br />\r\n                            <button className=\"btn btn-primary\" >Create</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddPost;\r\n","export function postAdded  (id, name, type, imgSrc) {\r\n    return {\r\n        type: \"POST_ADDED\",\r\n        payload: {\r\n            id: id,\r\n            name: name,\r\n            type: type,\r\n            imgSrc: imgSrc\r\n        }\r\n    };\r\n};","import React, { Component, useContext, useState } from 'react';\r\nimport PostContext from '../context/postContext';\r\nimport Post from './post';\r\nimport { Link } from 'react-router-dom';\r\nimport { AddPostContext } from '../context/addPostsContext';\r\nimport Details from './details';\r\n\r\nfunction ViewPosts() {\r\n    const [posts] = useContext(AddPostContext);\r\n\r\n    return (\r\n\r\n        <div className=\"bar\" >\r\n            {posts.map(Posts =>\r\n\r\n                <Link to={{\r\n                    pathname: \"/Details\", state: {\r\n                        key: Posts.id, name: Posts.name,\r\n                        type: Posts.type, imgSrc: Posts.imgSrc\r\n                    }\r\n                }} >\r\n                    <Post key={Posts.id} name={Posts.name} type={Posts.type} imgSrc={Posts.imgSrc} />\r\n                </Link>\r\n\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ViewPosts;","import React from 'react';\nimport './App.css';\nimport Nav from './component/nav';\nimport AddPost from './component/addPost';\nimport ViewPosts from './component/viewPosts';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { PostProvider } from './context/postContext';\nimport { AddPostsProvider } from './context/addPostsContext';\n\n\n\nfunction App() {\n  return (\n    <PostProvider>\n      <AddPostsProvider>\n        <Router >\n          <div className=\"App\">\n            <Nav />\n            <Switch>                                                                                                                                                                                                                                                                                                                 \n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/AddPost\" component={AddPost} />\n              <Route path=\"/ViewPosts\" component={ViewPosts} />\n              \n            </Switch>\n          </div>\n        </Router>\n      </AddPostsProvider>\n    </PostProvider>\n  );\n}\nconst Home = () => {\n  return (<div>\n    <h1>Home</h1>\n  </div>);\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}